# ////////////////////////////////////////////////////////////////////
# Deploy de  
# ////////////////////////////////////////////////////////////////////
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/change-cause: Deploy en util-dev 1.0
  name:
  namespace: util-dev
  labels:
    env: dev
    emisor: util-dev
    componente:
spec:
  revisionHistoryLimit: 5
  #replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      componente:
      emisor: util-dev
      env: dev
  template:
    metadata:
      labels:
        componente:
        emisor: util-dev
        env: dev
    spec:
      terminationGracePeriodSeconds: 45
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: tenant
                operator: In
                values:
                - util
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: componente
                  operator: In
                  values:
                  - 
              topologyKey: kubernetes.io/hostname
      containers:
      - name:
        image: 891899566293.dkr.ecr.us-east-2.amazonaws.com/dev/utilitarios/util-
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 2000Mi
            cpu: '1'
          requests:
            memory: 51Mi
            cpu: '0.01'
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 25
          # readinessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: 8080
          #   initialDelaySeconds: 15
          #   periodSeconds: 10
          # livenessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: 8080
          #   initialDelaySeconds: 15
          #   periodSeconds: 10
          # startupProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: 8080
          #   failureThreshold: 30
          #   periodSeconds: 10
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DB_USER_UTIL
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: DB_USER_UTIL
        - name: DB_PASSWORD_UTIL
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: DB_PASSWORD_UTIL
        - name: DB_USER_APS249
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: DB_USER_APS249
        - name: DB_PASSWORD_APS249
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: DB_PASSWORD_APS249
