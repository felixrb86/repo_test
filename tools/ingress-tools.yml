# ********************************************************************* 
# ********************************************************************* 
# Ingress de tools QA
# ********************************************************************* 
# ********************************************************************* 
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "tools"
  namespace: "tools"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: "ent1-ext"
    # alb.ingress.kubernetes.io/backend-protocol: HTTPS #ArgoCD
    # # Use this annotation (which must match a service name) to route traffic to HTTP2 backends. ArgoCD
    # alb.ingress.kubernetes.io/conditions.argogrpc: '[{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "Content-Type", "values":["application/grpc"]}}]'
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":{ "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:891899566293:certificate/c30684b5-6ce3-4339-a7f2-ff19a0ae6b2e
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
  labels:
    app-name: tools
spec:
  rules:
    - host: argocd.cobre.co
      http:
        paths:
        - path: /*
          backend:
            serviceName: "argocd-server"
            servicePort: 80
  #   - host: argocd.qa.cobre.co
  #     http:
  #       paths:
  #       - backend:
  #           serviceName: argogrpc
  #           servicePort: 443
  #         pathType: ImplementationSpecific
  #       - backend:
  #           serviceName: argocd-server
  #           servicePort: 443
  #         pathType: ImplementationSpecific
  # tls:
  #   - hosts:
  #     - argocd.qa.cobre.co